package com.mayatech.Test;

import java.util.ArrayList;

import com.mayatech.baseLibs.genLib;
import com.mayatech.dm.ddmClient;
import com.mayatech.dm.ddmLib;
import com.mayatech.dm.ddmProxyServer;
import com.mayatech.dm.protocolTns.oracleTnsPackage;

public class testTNS {

	public static void main(String[] args) {
		String input="";
		
		//squirrel short
		input="[0]b[0][0][6][0][0][0][0][0][17]i[0][1][1][1][1][2][3][94][0][2][128]![0][1][1][26][1][1][13][0][0][4][255][255][255][255][1][10][4][127][255][255][255][0][0][0][0][0][0][0][0][0][0][0][1]select * from hr.employees[1][1][0][0][0][0][0][0][1][1][0][0][0][0][0]";
		//PreparedWeb short
		input="[0]W[0][0][6][0][0][0][0][0][3][94][0][2][128]![0][1][1][18][1][1][13][0][0][4][255][255][255][255][1][10][4][127][255][255][255][0][0][0][0][0][0][0][0][0][0][0][1][0][0][0][0][0]select 1 from dual[1][1][0][0][0][0][0][0][1][1][0][0][0][0][0]";
		//squirrel short
		input="[0]b[0][0][6][0][0][0][0][0][17]i[0][1][1][1][1][4][3][94][0][2][128]![0][1][1][26][1][1][13][0][0][4][255][255][255][255][1][10][4][127][255][255][255][0][0][0][0][0][0][0][0][0][0][0][1]select * from hr.employees[1][1][0][0][0][0][0][0][1][1][0][0][0][0][0]";
		//-------------------------------------------
		
		
		
		//digiturk deki kullanici
		//input="[4]_[0][0][6][0][0][0][0][0][3][94][6][3][4][4])[0][254][255][255][255][255][255][255][255][2][3]3[254][255][255][255][255][255][255][255][1][13][254][255][255][255][255][255][255][255][254][255][255][255][255][255][255][255][0][0][0][254][255][255][255][255][255][255][255][1][7][0][0][0][0][0][0][0][0][254][255][255][255][255][255][255][255][0][0][0][0][0][0][0][0][254][255][255][255][255][255][255][255][254][255][255][255][255][255][255][255][254][255][255][255][255][255][255][255][0][0][254][255][255][255][255][255][255][255][254][255][255][255][255][255][255][255][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][254]@declare  cursor NlsParamsCursor is    SELECT * FROM nls_session_@parameters;begin  SELECT Nvl(Lengthb(Chr(16777216)), Nvl(Lengthb@(Chr(65536)), Nvl(Lengthb(Chr(256)), 1))), Nvl(Lengthb(Chr(1)), @1)    INTO :MaxCharLength, :MinCharLength FROM dual;  for NlsRec@ord in NlsParamsCursor loop    if NlsRecord.parameter = 'NLS_DAT@E_LANGUAGE' then      :NlsDateLanguage := NlsRecord.value;    el@sif NlsRecord.parameter = 'NLS_DATE_FORMAT' then      :NlsDateFo@rmat := NlsRecord.value;    elsif NlsRecord.parameter = 'NLS_NUM@ERIC_CHARACTERS' then      :NlsNumericCharacters := NlsRecord.va@lue;    elsif NlsRecord.parameter = 'NLS_TIMESTAMP_FORMAT' then @     :NlsTimeStampFormat := NlsRecord.value;    elsif NlsRecord.@parameter = 'NLS_TIMESTAMP_TZ_FORMAT' then      :NlsTimeStampTZF3ormat := NlsRecord.value;    end if;  end loop;end;[0][1][1][1][1][0][0][0][0][0][1][9][0][0][0][0][0][2][1][0][0][1][22][0][0][0][0][0][0][0][2][1][0][0][1][22][0][0][0][0][0][0][0][1][1][0][0][1]P[0][1][16][0][0][1]'[1][0][1][1][0][0][1]P[0][1][16][0][0][1]'[1][0][1][1][0][0][1]P[0][1][16][0][0][1]'[1][0][1][1][0][0][1]P[0][1][16][0][0][1]'[1][0][1][1][0][0][1]P[0][1][16][0][0][1]'[1][0][7][253][1][253][1][253][1][253][1][253][1][253][1][253][1]";
		//oracle 12c client sqlplus 12 short
		input="[0][0][1][130][6][0][0][0][0][0][17]i[11][254][255][255][255][255][255][255][255][1][0][0][0][0][0][0][0][3][0][0][0][3][94][12]q
		//oracle 12c client sqlplus 12 long
		//input="[0][0][2]8[6][0][0][0][0][0][17]i[21][254][255][255][255][255][255][255][255][1][0][0][0][0][0][0][0][2][0][0][0][3][94][22]a[128][0][0][0][0][0][0][254][255][255][255][255][255][255][255][255][0][0][0][0][0][0][0][254][255][255][255][255][255][255][255][13][0][0][0][0][0][0][0][254][255][255][255][255][255][255][255][254][255][255][255][255][255][255][255][0][0][0][0][1][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][254][255][255][255][255][255][255][255][0][0][0][0][0][0][0][0][254][255][255][255][255][255][255][255][254][255][255][255][255][255][255][255][208][96][174][2][0][0][0][0][0][0][0][0][0][0][0][0][254][255][255][255][255][255][255][255][254][255][255][255][255][255][255][255][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][254][255][0][0][0]select 'Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' from dual[10]union all[10]select 'Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' from dual[0][0][0][0][1][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][1][0][0][0][0][0][0][0][0][128][0][0][0][0][0][0][0][0][0][0][0][0][0][0]";
		//toad 11 long
		//input="[2][29][0][0][6][0][0][0][0][0][17]i[15][1][1][0][0][0][6][0][0][0][3][94][16][1][128][2][0][0][0][0][0][1][132][1][0][0][1][13][0][0][0][1][1][0][0][0][0][245][1][0][0][0][0][0][0][0][0][0][0][0][0][1][0][1][1][1][0][0][0][0][0][0][0][0][1][1][0][0][0][0][0][0][0][0][0][0][0][0][0][0][254]@select 'Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx@xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' from dual[10]union@ all[10]select 'Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx@xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' from dual[10]@union all[10]select 'Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx@xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' from [4]dual[0][1][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][1][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0]";
		//squirrel short
		input="[0]j[0][0][6][0][0][0][0][0][17]i[0][1][1][1][1][2][3][94][0][2][128]![0][1][1]\"[1][1][13][0][0][4][255][255][255][255][1][10][4][127][255][255][255][0][0][0][0][0][0][0][0][0][0][0][1]select * from SYSTEM.TEST_DM_TABLE[1][1][0][0][0][0][0][0][1][1][0][0][0][0][0]";
		//11g sql plus 12 
		input="[1][31][0][0][6][0][0][0][0][0][17]i[28][254][255][255][255][255][255][255][255][1][0][0][0][0][0][0][0][4][0][0][0][3][94][29]a[128][0][0][0][0][0][0][254][255][255][255][255][255][255][255]N[0][0][0][254][255][255][255][255][255][255][255][13][0][0][0][254][255][255][255][255][255][255][255][254][255][255][255][255][255][255][255][0][0][0][0][1][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][254][255][255][255][255][255][255][255][0][0][0][0][0][0][0][0][254][255][255][255][255][255][255][255][254][255][255][255][255][255][255][255][254][255][255][255][255][255][255][255][0][0][0][0][0][0][0][0][254][255][255][255][255][255][255][255][254][255][255][255][255][255][255][255][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][26]select * from hr.employees[1][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][1][0][0][0][0][0][0][0][0][128][0][0][0][0][0][0][0][0][0][0][0][0][0][0]";
		//atakan f4
		input="[1][144][0][0][6][0][0][0][0][0][17]i[173][254][255][255][255][255][255][255][255][1][1][1][8][3][94][174][2][128]ielect created, last_ddl_time, object_id, status[10]from sys.DBA_OB@JECTS[10]where object_name = :nm[10]and owner = :o[10]and object_type = :[1]t[0][1][1][0][0][0][0][0][0][1][1][0][0][0][0][0][1][1][0][0][1],[0][1][16][0][0][1]'[1][0][1][1][0][0][1][14][0][1][16][0][0][1]'[1][0][1][1][0][0][1][10][0][1][16][0][0][1]'[1][0][7][22]DT_SOL_CAMPAIGN_CHANGE[7]DBS_DBA[5]TABLE";
		//F4 ile ilgili problem olusturan seri.
		input="[1][135][0][0][6][0][0][0][0][0][17]i[29][254][255][255][255][255][255][255][255][1][1][1][1][3][94][30][2][128]i	[254]@Select created, last_ddl_time, object_id, status[10]from sys.DBA_OB@JECTS[10]where object_name = :nm[10]and owner = :o[10]and object_type = :[1]t[0][1][1][0][0][0][0][0][0][1][1][0][0][0][0][0][1][1][0][0][1][26][0][1][16][0][0][1]'[1][0][1][1][0][0][1][14][0][1][16][0][0][1]'[1][0][1][1][0][0][1][10][0][1][16][0][0][1]'[1][0][7][13]SMS_ISLEM_LOG[7]SMS_DBA[5]TABLE";
		
		byte[] buf=ddmLib.string2ByteArr(input);
		System.out.println(input);
		
		
		ddmProxyServer dm=new ddmProxyServer();
		dm.is_debug=true;
		
		ddmClient client=new ddmClient(dm);
		client.ORADISC_is_chunk_discovered=true;
		client.ORADISC_chunk_style=1; //1 ( 1:[254]@s, 2:[254][149][20][0][0]s, 3:[254][2][3][31]s )
		client.ORADISC_chunk_limit=64;	// 64 or 255
		
		
		int len=buf.length;
		int package_version=58;
		//int protocol_characteristic=20120;
		int protocol_characteristic=-14834;
		String charset="utf-8";
		
		oracleTnsPackage pack=new oracleTnsPackage();
		pack.is_debug=true;
		pack.compile(client, buf, len, package_version, protocol_characteristic, charset);


		pack.setStatement(pack.sql_statement+" x ");
		
		
		
		ArrayList<byte[]> packArr=new ArrayList<byte[]>();
		ArrayList<Integer> sizeArr=new ArrayList<Integer>();
		
		pack.rePack(4096, packArr, sizeArr);
		int package_count=packArr.size();
		
		System.out.println("original : ");
		ddmLib.printByteArray(buf, buf.length);
		
		System.out.println("repacked : ");

		for (int p=0;p<package_count;p++) {
			byte[] sendBuf=packArr.get(p);
			int sendBufSize=sizeArr.get(p);
			
			System.out.println("Sending buffer ["+(p+1)+"/"+package_count+"]  ");
			ddmLib.printByteArray(sendBuf, 0, sendBufSize);
			
			/*
			try {
				to_server_stream.write(sendBuf, 0, sendBufSize);
				to_server_stream.flush();
			} catch(Exception e) {
				mylog("Exception@rewriteSqlToBuffer : " + genLib.getStackTraceAsStringBuilder(e).toString());
			}
			*/
		}
		
		



		


	}
}
